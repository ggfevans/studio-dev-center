"use strict";(globalThis.webpackChunkvertigis_studio_dev_center=globalThis.webpackChunkvertigis_studio_dev_center||[]).push([[8965,3131,3381],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>h});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var m=a.createContext({}),c=function(e){var n=a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return a.createElement(m.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,m=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(t),p=o,h=d["".concat(m,".").concat(p)]||d[p]||u[p]||r;return t?a.createElement(h,i(i({ref:n},l),{},{components:t})):a.createElement(h,i({ref:n},l))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=p;var s={};for(var m in n)hasOwnProperty.call(n,m)&&(s[m]=n[m]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),o=t(6010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,i),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>w});var a=t(7462),o=t(7294),r=t(6010),i=t(2466),s=t(6550),m=t(1980),c=t(7392),l=t(12);function d(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:o}}=e;return{value:n,label:t,attributes:a,default:o}}))}function u(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const a=(0,s.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,m._X)(r),(0,o.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=u(e),[i,s]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[m,c]=h({queryString:t,groupId:a}),[d,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,l.Nk)(t);return[a,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),f=(()=>{const e=m??d;return p({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),g(e)}),[c,g,r]),tabValues:r}}var f=t(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:n,block:t,selectedValue:s,selectValue:m,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),a=c[t].value;a!==s&&(d(n),m(a))},p=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n)},c.map((e=>{let{value:n,label:t,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,key:n,ref:e=>l.push(e),onKeyDown:p,onClick:u},i,{className:(0,r.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":s===n})}),t??n)})))}function k(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function y(e){const n=g(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",b.tabList)},o.createElement(v,(0,a.Z)({},e,n)),o.createElement(k,(0,a.Z)({},e,n)))}function w(e){const n=(0,f.Z)();return o.createElement(y,(0,a.Z)({key:String(n)},e))}},4388:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>m,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=t(7462),o=(t(7294),t(3905)),r=(t(4996),t(4866)),i=t(5162);t(9190),t(7840);const s={title:"Commands and Operations",description:"VertiGIS Studio Web - Learn how to register and run commands and operations in custom components and services"},m=void 0,c={unversionedId:"web/sdk-commands-operations",id:"web/sdk-commands-operations",title:"Commands and Operations",description:"VertiGIS Studio Web - Learn how to register and run commands and operations in custom components and services",source:"@site/docs/web/sdk-commands-operations.mdx",sourceDirName:"web",slug:"/web/sdk-commands-operations",permalink:"/docs/web/sdk-commands-operations",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/web/sdk-commands-operations.mdx",tags:[],version:"current",frontMatter:{title:"Commands and Operations",description:"VertiGIS Studio Web - Learn how to register and run commands and operations in custom components and services"},sidebar:"web",previous:{title:"Events Reference",permalink:"/docs/web/sdk-events-reference"},next:{title:"Serializable Properties",permalink:"/docs/web/sdk-serializable-properties"}},l={},d=[{value:"Running Commands and Operations",id:"running-commands-and-operations",level:2},{value:"Command and Operations in a Model",id:"command-and-operations-in-a-model",level:3},{value:"Command and Operations in a Component",id:"command-and-operations-in-a-component",level:3},{value:"Commands and Operations in a Service",id:"commands-and-operations-in-a-service",level:3},{value:"Implementing Commands and Operations",id:"implementing-commands-and-operations",level:2},{value:"<code>@command</code> and <code>@operation</code> Decorator Options",id:"command-and-operation-decorator-options",level:3},{value:"<code>canExecute</code> Hook",id:"canexecute-hook",level:3},{value:"Running Custom Commands",id:"running-custom-commands",level:2}],u={toc:d},p="wrapper";function h(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"When writing custom components you may want to take advantage of VertiGIS Studio Web's large ",(0,o.kt)("a",{parentName:"p",href:"/docs/web/api-commands-operations-events"},"built-in suite of command and operations")," or your own custom commands and operations."),(0,o.kt)("h2",{id:"running-commands-and-operations"},"Running Commands and Operations"),(0,o.kt)("p",null,"Commands and operations can be run in any custom service or component. Components can run commands and operations in two ways; through the component model, or through the React component."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"It is best practice to run commands and operations through the components model, and express the result through a change in the models data rendered by the component.")),(0,o.kt)("h3",{id:"command-and-operations-in-a-model"},"Command and Operations in a Model"),(0,o.kt)("p",null,"Commands and operations can be run through the ",(0,o.kt)("inlineCode",{parentName:"p"},"messages")," property of the model."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'@serializable\nexport default class ExampleComponentModel extends ComponentModelBase {\n    async displayConfirmDialog(){\n        const didConfirm = await this.messages.operations.ui.confirm.execute({\n            title: "Confirm me"\n        })\n        ...\n    }\n    ...\n}\n')),(0,o.kt)("h3",{id:"command-and-operations-in-a-component"},"Command and Operations in a Component"),(0,o.kt)("p",null,"Commands and operations can be run through the ",(0,o.kt)("a",{parentName:"p",href:"/docs/web/sdk-components-ui-context"},(0,o.kt)("inlineCode",{parentName:"a"},"UIContext")," of a component"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'export default function CustomComponent(props) {\n    // highlight-next-line\n    const { operations, commands } = useContext(UIContext);\n\n    const displayConfirmDialog = async () => {\n        const result = await operations.ui.confirm.execute({\n            title: "Confirm Me",\n        });\n        ...\n    };\n    ...\n}\n')),(0,o.kt)("h3",{id:"commands-and-operations-in-a-service"},"Commands and Operations in a Service"),(0,o.kt)("p",null,"Services can run commands and operations through the ",(0,o.kt)("inlineCode",{parentName:"p"},"messages")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'export default class ExampleService extends ServiceBase {\n    protected async someMethod(): Promise<void> {\n        // highlight-next-line\n        const { commands, command, operations, operation } =\n            this.messages;\n\n        // Execute a named, built-in, command.\n        commands.ui.setTheme.execute("dark");\n\n        // Execute a custom command by its string ID. If you are executing\n        // a custom command with arguments, you must provide the correct generic typings.\n        command<string>(\n            "my-custom.command-that-takes-a-string"\n        ).execute("some arg");\n\n        // Execute a named, built-in, operation.\n        const opResult = await operations.ui.confirm.execute({\n            message: "hey",\n        });\n\n        // Execute a custom operation by its string ID.\n        // You must provide the correct generic typings <input, output>.\n        const customOpResult = await operation<string, boolean>(\n            "my-custom.operation-that-returns-a-bool"\n        ).execute("some arg");\n    }\n}\n')),(0,o.kt)("h2",{id:"implementing-commands-and-operations"},"Implementing Commands and Operations"),(0,o.kt)("p",null,"Components and services can also implement commands and operations. Command and operation implementations are defined in a ",(0,o.kt)("a",{parentName:"p",href:"/docs/web/sdk-components-reference#models"},"component's model")," or in a ",(0,o.kt)("a",{parentName:"p",href:"/docs/web/sdk-services-overview"},"service"),". By decorating a method with ",(0,o.kt)("inlineCode",{parentName:"p"},"@command")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"@operation"),", components and services can define an implementation for a command or operation. The command or operation must also be registered through the ",(0,o.kt)("inlineCode",{parentName:"p"},"registerOperation")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"registerCommand")," methods in the library registry with the same item type of the model or the ID of the service."),(0,o.kt)("p",null,"The following example demonstrates a component model defines an implementation for a custom command that takes a custom argument type, and a service that implements a custom operation that returns a number."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"It's best practice to expose the arguments and return values for commands and operations as public interfaces, as this allows consumers of the command or operation to have the appropriate typing.")),(0,o.kt)(r.Z,{defaultValue:"model",values:[{label:"Component Model",value:"model"},{label:"Service",value:"service"},{label:"Registration",value:"registration"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"model",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"export interface CustomCommandArg {\n    value: string;\n}\n\n@serializable\nexport default class CustomModel extends ComponentModelBase {\n    @command(\"custom.my-command\")\n    protected _myCommand(arg: CustomCommandArg): void {\n        console.log(\n            `Executing 'custom.my-command' with argument '${arg.value}'`\n        );\n    }\n}\n"))),(0,o.kt)(i.Z,{value:"service",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'export default class CustomService extends ServiceBase {\n    @operation("custom.my-operation")\n    protected _myOperation(): number {\n        return 42;\n    }\n}\n'))),(0,o.kt)(i.Z,{value:"registration",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'export default function (registry: LibraryRegistry) {\n    ...\n\n    registry.registerCommand({\n        name: "custom.my-command",\n        // highlight-next-line\n        itemType: "custom-model"\n    });\n\n    registry.registerModel({\n        getModel: (config) => new CustomModel(config),\n        // highlight-next-line\n        itemType: "custom-model",\n    });\n\n    registry.registerOperation({\n        name: "custom.my-operation",\n        // highlight-next-line\n        serviceId: "custom-service"\n    });\n\n    registry.registerService({\n        getService: () => new CustomService(),\n        // highlight-next-line\n        id: "custom-service",\n    });\n}\n')))),(0,o.kt)("h3",{id:"command-and-operation-decorator-options"},(0,o.kt)("inlineCode",{parentName:"h3"},"@command")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"@operation")," Decorator Options"),(0,o.kt)("p",null,"Both the ",(0,o.kt)("inlineCode",{parentName:"p"},"@command")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"@operation")," decorator functions can take an optional second argument specifying parameters that affect the behavior of the command or operation."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"targetInactive")," option applies to commands and operations implemented through a component model. The default value is false. If ",(0,o.kt)("inlineCode",{parentName:"p"},"targetInactive")," is set to true, the command or operation will be executed even if the associated component is not currently active in the layout"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// highlight-next-line\n@command("custom.my-command", { targetInactive: true })\nprotected _myCommand() {\n    console.log(\n        `Executing \'custom.my-command even if the associated\n        component is not activated in the layout.`\n    );\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"parallel")," option applies to commands only. The default value is false. By default, if a command has multiple implementations, each implementation is executed sequentially in the order it was registered in the library, and multiple component model implementations are executed in layout order. Setting ",(0,o.kt)("inlineCode",{parentName:"p"},"parallel")," to true causes the command implementation to be run in parallel with other implementations marked as ",(0,o.kt)("inlineCode",{parentName:"p"},"parallel"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If there is a mix of parallel and sequential command implementations, then the parallel implementations will run concurrently after all sequential implementations have finished executing.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// highlight-next-line\n@command("custom.my-command", { parallel: true })\nprotected _myCommand() {\n    console.log(\n        `This implementation will be executed in parallel\n        with other command implementations marked as parallel.`\n    );\n}\n')),(0,o.kt)("h3",{id:"canexecute-hook"},(0,o.kt)("inlineCode",{parentName:"h3"},"canExecute")," Hook"),(0,o.kt)("p",null,'Commands and services can optionally implement a hook function which indicates whether it is possible to execute the command. This is accomplished by implementing a "canExecute" method in the same class as the command implementation. This method is decorated with ',(0,o.kt)("inlineCode",{parentName:"p"},"@canExecute")," and returns a boolean indicating whether the command can or cannot run based on the given argument."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'@command("custom.divide-ten-by-x")\nprotected _divideTenByX(x: number): void {\n    this.messages.commands.ui.alert.execute({\n        message: `10 / ${x} is ${10 / x}`,\n    });\n}\n\n// highlight-start\n@canExecute("custom.divide-ten-by-x")\nprotected _canExecuteDivideTenByX(x: number): boolean {\n    return x !== 0;\n}\n// highlight-end\n')),(0,o.kt)("p",null,"If the ",(0,o.kt)("inlineCode",{parentName:"p"},"canExecute")," hook for the command implementation returns true, the ",(0,o.kt)("inlineCode",{parentName:"p"},"execute")," hook will be called. If the function returns false, the ",(0,o.kt)("inlineCode",{parentName:"p"},"execute")," hook will not be called. Some components, like the I Want To Menu, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"canExecute")," hook to disable buttons when no implementations of a command can be executed. This is accomplished through the ",(0,o.kt)("inlineCode",{parentName:"p"},"canExecuteChanged")," event. This event can be published or subscribed to in order to react to changing command execution conditions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'this.messages\n    .command("custom.command-with-can-execute")\n    .canExecuteChanged.publish();\n\nthis.messages\n    .command("custom.command-with-can-execute")\n    .canExecuteChanged.subscribe(() => {\n        // .. react to can execute status changing\n    });\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"For a full example of a command with a dynamic execution status, ",(0,o.kt)("a",{parentName:"p",href:"/docs/web/tutorial-command-can-execute"},"check out the ",(0,o.kt)("inlineCode",{parentName:"a"},"canExecute")," tutorial"),", or ",(0,o.kt)("a",{parentName:"p",href:"https://vertigis-web-samples.netlify.app/commands-and-operations"},"this live SDK sample"),".")),(0,o.kt)("h2",{id:"running-custom-commands"},"Running Custom Commands"),(0,o.kt)("p",null,"You can run the custom commands or operations you define from another component, model, or service by locating them by ID and providing the appropriate type arguments."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'@serializable\nexport default class ExampleComponentModel extends ComponentModelBase {\n    async runCustomCommandsAndOperations() {\n        // highlight-start\n        await this.messages\n            .command<CustomCommandArg>("custom.my-command")\n            .execute({\n                someProp: "some arg",\n            });\n        // highlight-end\n\n        // highlight-start\n        const result = await this.messages\n            .operation<InputArgType, OutputArgType>(\n                "custom.my-operation"\n            )\n            .execute({\n                some: "arg",\n            });\n        // highlight-end\n        // ...\n    }\n    // ...\n}\n')))}h.isMDXComponent=!0},7840:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=t(7462),o=(t(7294),t(3905));const r={},i=void 0,s={unversionedId:"web/snippets/framework-components",id:"web/snippets/framework-components",title:"framework-components",description:"This example uses VertiGIS Studio Web layout components",source:"@site/docs/web/snippets/framework-components.mdx",sourceDirName:"web/snippets",slug:"/web/snippets/framework-components",permalink:"/docs/web/snippets/framework-components",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/web/snippets/framework-components.mdx",tags:[],version:"current",frontMatter:{}},m={},c=[],l={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This example uses VertiGIS Studio Web layout components")))}u.isMDXComponent=!0},9190:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=t(7462),o=(t(7294),t(3905));const r={},i=void 0,s={unversionedId:"web/snippets/prereqs-custom-code",id:"web/snippets/prereqs-custom-code",title:"prereqs-custom-code",description:"-   Download and setup the VertiGIS Studio Web SDK.",source:"@site/docs/web/snippets/prereqs-custom-code.mdx",sourceDirName:"web/snippets",slug:"/web/snippets/prereqs-custom-code",permalink:"/docs/web/snippets/prereqs-custom-code",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/web/snippets/prereqs-custom-code.mdx",tags:[],version:"current",frontMatter:{}},m={},c=[],l={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Download and setup the ",(0,o.kt)("a",{parentName:"li",href:"/docs/web/sdk-overview"},"VertiGIS Studio Web SDK"),"."),(0,o.kt)("li",{parentName:"ul"},"Check out the ",(0,o.kt)("a",{parentName:"li",href:"/docs/web/sdk-deployment#uploading-custom-code-to-an-app"},"deployment instructions")," to learn more about deploying custom code to a VertiGIS Studio Web App.")))}u.isMDXComponent=!0}}]);