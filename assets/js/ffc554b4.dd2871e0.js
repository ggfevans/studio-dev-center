"use strict";(globalThis.webpackChunkvertigis_studio_dev_center=globalThis.webpackChunkvertigis_studio_dev_center||[]).push([[9261],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[u]="string"==typeof e?e:i,l[1]=r;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),i=n(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(o.tabItem,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>x});var a=n(7462),i=n(7294),o=n(6010),l=n(2466),r=n(6550),s=n(1980),p=n(7392),c=n(12);function u(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function m(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,r.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,i.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=m(e),[l,r]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,p]=h({queryString:n,groupId:a}),[u,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),k=(()=>{const e=s??u;return d({value:e,tabValues:o})?e:null})();(0,i.useLayoutEffect)((()=>{k&&r(k)}),[k]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);r(e),p(e),g(e)}),[p,g,o]),tabValues:o}}var k=n(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:r,selectValue:s,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.o5)(),m=e=>{const t=e.currentTarget,n=c.indexOf(t),a=p[n].value;a!==r&&(u(t),s(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},l,{className:(0,o.Z)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":r===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=g(e);return i.createElement("div",{className:(0,o.Z)("tabs-container",f.tabList)},i.createElement(b,(0,a.Z)({},e,t)),i.createElement(v,(0,a.Z)({},e,t)))}function x(e){const t=(0,k.Z)();return i.createElement(y,(0,a.Z)({key:String(t)},e))}},8071:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>g,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var a=n(7462),i=(n(7294),n(3905)),o=n(4996),l=n(4866),r=n(5162);const s={title:"Layout Reference",description:"VertiGIS Studio Mobile - Layout Reference"},p=void 0,c={unversionedId:"mobile/configuration-layout-reference",id:"mobile/configuration-layout-reference",title:"Layout Reference",description:"VertiGIS Studio Mobile - Layout Reference",source:"@site/docs/mobile/configuration-layout-reference.mdx",sourceDirName:"mobile",slug:"/mobile/configuration-layout-reference",permalink:"/docs/mobile/configuration-layout-reference",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/mobile/configuration-layout-reference.mdx",tags:[],version:"current",frontMatter:{title:"Layout Reference",description:"VertiGIS Studio Mobile - Layout Reference"},sidebar:"mobile",previous:{title:"Getting Started",permalink:"/docs/mobile/configuration-layout-getting-started"},next:{title:"Advanced Model Binding",permalink:"/docs/mobile/configuration-advanced-model-binding"}},u={},m=[{value:"Autocomplete Properties",id:"autocomplete-properties",level:2},{value:"Basic Attributes",id:"basic-attributes",level:2},{value:"<code>id</code>",id:"id",level:3},{value:"<code>config</code>",id:"config",level:3},{value:"<code>active</code>",id:"active",level:3},{value:"Core Layout Components",id:"core-layout-components",level:2},{value:"Stacks and Splits",id:"stacks-and-splits",level:3},{value:"Panels",id:"panels",level:3},{value:"Activation",id:"activation",level:4},{value:"Deactivation",id:"deactivation",level:4},{value:"Taskbar",id:"taskbar",level:3},{value:"Presentation Attributes",id:"presentation-attributes",level:2},{value:"<code>margin</code>",id:"margin",level:3},{value:"<code>padding</code>",id:"padding",level:3},{value:"<code>width</code>",id:"width",level:3},{value:"<code>height</code>",id:"height",level:3},{value:"<code>grow</code>",id:"grow",level:3},{value:"<code>halign</code> (Horizontal Align)",id:"halign-horizontal-align",level:3},{value:"<code>valign</code> (Vertical Align)",id:"valign-vertical-align",level:3},{value:"Alignments Effect on cross-axis stretching",id:"alignments-effect-on-cross-axis-stretching",level:3}],d={toc:m},h="wrapper";function g(e){let{components:t,...n}=e;return(0,i.kt)(h,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"autocomplete-properties"},"Autocomplete Properties"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"layout-*.xml")," files that come with the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/geocortex/vertigis-mobile-quickstart"},"Quickstart")," reference an xml schema. This XML schema allows Visual Studio to autocomplete property names and provide linting for types. Two attributes on the layout, ",(0,i.kt)("inlineCode",{parentName:"p"},"xmlns:xsi"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"xsi:schemaLocation")," allow this to happen. If you move the ",(0,i.kt)("inlineCode",{parentName:"p"},"layout-*.xml")," files, you will need to adjust the relative reference to the layout schema for autocomplete to still function."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ViewerFramework")," folder containing the schema will not be created until an initial build has been run.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8" ?>\n<layout\n    xmlns="https://geocortex.com/layout/v1"\n    xmlns:gxm="https://geocortex.com/layout/mobile/v1"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="https://geocortex.com/layout/v1 ../../ViewerSpec/layout/layout-mobile.xsd">\n    ...\n</layout>\n')),(0,i.kt)("h2",{id:"basic-attributes"},"Basic Attributes"),(0,i.kt)("p",null,"This is a reference for the attributes available to all components in an app layout. All components support these attributes, as well as any custom attributes the component defines. Some of these attributes are accessible through the ",(0,i.kt)("a",{parentName:"p",href:"https://apps.vertigisstudio.com/mobile/designer/"},"VertiGIS Studio Mobile Designer"),", and the rest can be configured through layout."),(0,i.kt)("p",null,"All attributes are specified as string values, and parsed into their respective types by VertiGIS Studio Mobile"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- string attribute --\x3e\n<stack id="some-id"/>\n\x3c!-- number attribute --\x3e\n<stack margin="3"/>\n\x3c!-- boolean attribute --\x3e\n<stack active="false"/>\n')),(0,i.kt)("h3",{id:"id"},(0,i.kt)("inlineCode",{parentName:"h3"},"id")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Used to uniquely identify the component in the layout."),(0,i.kt)("h3",{id:"config"},(0,i.kt)("inlineCode",{parentName:"h3"},"config")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Used to bind a component to an item in the app config. See ",(0,i.kt)("a",{parentName:"p",href:"/docs/mobile/configuration-app-config-getting-started#linking-layout-to-app-config"},"linking layout app config")," for more details."),(0,i.kt)("h3",{id:"active"},(0,i.kt)("inlineCode",{parentName:"h3"},"active")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Used to mark a component as initially active and visible."),(0,i.kt)("h2",{id:"core-layout-components"},"Core Layout Components"),(0,i.kt)("p",null,"The following is a reference for the main components used for visual organization in the layout."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"All of these components are available for use in the ",(0,i.kt)("a",{parentName:"p",href:"https://apps.vertigisstudio.com/mobile/designer/"},"VertiGIS Studio Mobile\nDesigner"),".")),(0,i.kt)("h3",{id:"stacks-and-splits"},"Stacks and Splits"),(0,i.kt)("p",null,"Stacks and splits are used to partition the viewer into rectangular sectors, each filled with whichever components you desire."),(0,i.kt)("p",null,"The best way to think of stacks is that every item within them is being ordered top to bottom:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<stack>\n    <text text="item1"/>\n    <text text="item2"/>\n    <text text="item3"/>\n</stack>\n')),(0,i.kt)("img",{className:"stackSplitImage",src:(0,o.Z)("img/stack-split-1.png")}),(0,i.kt)("p",null,"The best way to think of splits is that every item within them is being ordered left to right:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<split>\n    <text text="item1"/>\n    <text text="item2"/>\n    <text text="item3"/>\n</split>\n')),(0,i.kt)("img",{className:"stackSplitImage",src:(0,o.Z)("img/stack-split-2.png")}),(0,i.kt)("p",null,"When creating complex layouts with embedded stacks and splits, it's good to picture building it from the inside out:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<stack>\n    <split>\n        <text text="item1"/>\n        <stack>\n            <text text="item2"/>\n            <text text="item3"/>\n        </stack>\n    </split>\n    <split>\n        <text text="item4"/>\n        <text text="item5"/>\n        <text text="item6"/>\n    </split>\n</stack>\n')),(0,i.kt)("p",null,"We start by building the first inner-most stack:"),(0,i.kt)("img",{className:"stackSplitImage",src:(0,o.Z)("img/stack-split-4.png")}),(0,i.kt)("p",null,"Then slot that into the split one level up:"),(0,i.kt)("img",{className:"stackSplitImage",src:(0,o.Z)("img/stack-split-5.png")}),(0,i.kt)("p",null,"We then build the next split:"),(0,i.kt)("img",{className:"stackSplitImage",src:(0,o.Z)("img/stack-split-6.png")}),(0,i.kt)("p",null,"And finally slot those two splits into the outer-most stack:"),(0,i.kt)("img",{className:"stackSplitImage",src:(0,o.Z)("img/stack-split-3.png")}),(0,i.kt)("h3",{id:"panels"},"Panels"),(0,i.kt)("p",null,"Panels are a container component that enable hierarchical navigation between different components."),(0,i.kt)(l.Z,{defaultValue:"layout",values:[{label:"Layout",value:"layout"},{label:"Stack",value:"stack"},{label:"Feature Details",value:"feature-details"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"layout",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<panel>\n    <stack>\n        <search config="search"/>\n        <results-list config="results" active="false" />\n    </stack>\n    <feature-details config="feature-details"/>\n</panel>\n'))),(0,i.kt)(r.Z,{value:"stack",mdxType:"TabItem"},(0,i.kt)("img",{src:(0,o.Z)("img/mobile-panel-one.png")})),(0,i.kt)(r.Z,{value:"feature-details",mdxType:"TabItem"},(0,i.kt)("img",{src:(0,o.Z)("img/mobile-panel-two.png")}))),(0,i.kt)("p",null,"This ",(0,i.kt)("inlineCode",{parentName:"p"},"search-panel")," has two root components:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A stack containing a ",(0,i.kt)("inlineCode",{parentName:"li"},"<search>")," and a ",(0,i.kt)("inlineCode",{parentName:"li"},"<results-list>")),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"<feature-details>"))),(0,i.kt)("p",null,"When you first open the panel, the first component in the panel that is not explicitly set to ",(0,i.kt)("inlineCode",{parentName:"p"},'active="false"')," is activated. In this example, it's the ",(0,i.kt)("inlineCode",{parentName:"p"},"<stack>")," component containing a ",(0,i.kt)("inlineCode",{parentName:"p"},"<search>")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"<results-list>"),".\nWhen a feature in the results list is opened, the ",(0,i.kt)("inlineCode",{parentName:"p"},"<feature-details>")," component will be activated. At this point, the panel takes over the activation of the component. It will display the new component in the place of the existing component, and provide a back button to navigate to the previous component. The activation and deactivation algorithms for a panel rely on the concept of a stacking order of components laid on top of each other, with the first component being the bottommost, and the last being the topmost. In the example above, the ",(0,i.kt)("inlineCode",{parentName:"p"},"<stack>")," containing ",(0,i.kt)("inlineCode",{parentName:"p"},"<search>")," is the lowest, while the ",(0,i.kt)("inlineCode",{parentName:"p"},"<feature-details>")," is the topmost."),(0,i.kt)("h4",{id:"activation"},"Activation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If the target component exists in the panel, then deactivate components above it until the target component is active",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Else, the target component must be deactivated, so activate it and place it above the existing component")))),(0,i.kt)("h4",{id:"deactivation"},"Deactivation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If the component is the topmost element (it is active), then deactivate it.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Else, the component is already inactive")))),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"The default ",(0,i.kt)("inlineCode",{parentName:"p"},"layout-large.xml")," in the VertiGIS Studio Mobile ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/geocortex/vertigis-mobile-quickstart"},"Quickstart")," has examples of multiple panels that live in the taskbar.")),(0,i.kt)("h3",{id:"taskbar"},"Taskbar"),(0,i.kt)("p",null,"The taskbar is a major organizational element in VertiGIS Studio Mobile Apps. It provides an expandable menu designed for mobile form factors that hosts panels with dynamic content."),(0,i.kt)("p",null,"Every taskbar has a ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," slot, which hosts the primary content, usually a map."),(0,i.kt)(l.Z,{defaultValue:"layout",values:[{label:"Layout",value:"layout"},{label:"User Interface",value:"ui"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"layout",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8" ?>\n<layout\n    xmlns="https://geocortex.com/layout/v1"\n    xmlns:gxm="https://geocortex.com/layout/mobile/v1"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="https://geocortex.com/layout/v1 ../../ViewerSpec/layout/layout-mobile.xsd">\n  <gxm:taskbar id="taskbar" orientation="vertical">\n\n    \x3c!-- Taskbar main content --\x3e\n    <map slot="main"/>\n\n  </gxm:taskbar>\n</layout>\n\n'))),(0,i.kt)(r.Z,{value:"ui",mdxType:"TabItem"},(0,i.kt)("img",{src:(0,o.Z)("img/mobile-taskbar-simple.png")}))),(0,i.kt)("p",null,"Items that live in the sidebar can be defined within the taskbar component, and typically consist of Panels containing other components, like a results list, or a workflow container."),(0,i.kt)(l.Z,{defaultValue:"layout",values:[{label:"Layout",value:"layout"},{label:"User Interface",value:"ui"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"layout",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8" ?>\n<layout\n    xmlns="https://geocortex.com/layout/v1"\n    xmlns:gxm="https://geocortex.com/layout/mobile/v1"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="https://geocortex.com/layout/v1 ../../ViewerSpec/layout/layout-mobile.xsd">\n  <gxm:taskbar id="taskbar" orientation="vertical">\n\n    \x3c!-- Taskbar main content --\x3e\n    <map config="map1" slot="main"/>\n\n    \x3c!-- Taskbar / search --\x3e\n    <panel>\n      <stack id="search">\n        <search config="search"/>\n        <results-list config="results" active="false" />\n      </stack>\n      <feature-details config="feature-details"/>\n    </panel>\n\n    \x3c!-- Taskbar / layers --\x3e\n    <panel id="layers">\n      <layer-list />\n    </panel>\n\n    \x3c!--Taskbar / workflow--\x3e\n    <panel>\n      <workflow config="workflow" icon="workflow"/>\n    </panel>\n  </gxm:taskbar>\n</layout>\n'))),(0,i.kt)(r.Z,{value:"ui",mdxType:"TabItem"},(0,i.kt)("img",{src:(0,o.Z)("img/mobile-taskbar-complex.png")}))),(0,i.kt)("h2",{id:"presentation-attributes"},"Presentation Attributes"),(0,i.kt)("p",null,"Components support a number of presentation attributes to adjust their positioning and styling in the application after slotting. Some of these presentation attributes are accessible through the ",(0,i.kt)("a",{parentName:"p",href:"https://apps.vertigisstudio.com/mobile/designer/"},"VertiGIS Studio Mobile Designer"),", and the rest must be configured through layout."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"All dimensional units are expressed in 'em's, where 1 em is equal to the current font size.")),(0,i.kt)("h3",{id:"margin"},(0,i.kt)("inlineCode",{parentName:"h3"},"margin")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Sets the size of the white space outside of the component.",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<map margin="1.5"/> \x3c!-- Sets the margin on a map to be equal to 1.5em. This would be 22.5 pts high if the current font size is 15 --\x3e\n')),(0,i.kt)("h3",{id:"padding"},(0,i.kt)("inlineCode",{parentName:"h3"},"padding")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Sets the size of the white space between a component and its content.",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Applies to"),": This attribute will only apply to components with children.",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<stack padding="0.5"/> \x3c!-- Sets the padding on a stack to be equal to 0.5em. This would be 7.5 pts high if the current font size is 15 --\x3e\n')),(0,i.kt)("h3",{id:"width"},(0,i.kt)("inlineCode",{parentName:"h3"},"width")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Default value"),": If a width is not set, then the width shall be the natural width of the component or a dynamic size based on the ",(0,i.kt)("inlineCode",{parentName:"p"},"grow")," and alignment attributes.\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Sets the width of a component."),(0,i.kt)("h3",{id:"height"},(0,i.kt)("inlineCode",{parentName:"h3"},"height")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Sets the height of a component.",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- Sets the width of a map to 30em, and the height to 20em. --\x3e\n<map width="30" height="20"/>\n')),(0,i.kt)("h3",{id:"grow"},(0,i.kt)("inlineCode",{parentName:"h3"},"grow")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Sets whether or not a component's width or height will grow over its parents primary axis. Components with a grow of 0 will fill to their natural or requested height. Components with a specified grow will fill up a percentage of the remaining space equal to their grow value divided by the total grow of all sibling components (including the component in question).",(0,i.kt)("br",{parentName:"p"}),"\n",'The default value for a component varies by component. For most components, if no grow value is specified, they will default to a grow value of "0". The following components however will have a default grow value of "1":'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Map"),(0,i.kt)("li",{parentName:"ul"},"Stack"),(0,i.kt)("li",{parentName:"ul"},"Split")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Applies to"),": All components may specify this value, but it will only take effect if the component is a child of a split or a stack. For stacks, grow indicates how the child grows along the vertical axis. For splits, grow indicates how the child grows along the horizontal axis.",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<stack>\n    \x3c!-- Heading will take up whatever vertical space it requires, and will occupy its natural width. --\x3e\n    <text content="Heading"/>\n    \x3c!-- The first map will occupy 1/3 of the remaining vertical space, and will occupy the full width available. --\x3e\n    <map grow="1"/>\n    \x3c!-- The first map will occupy 2/3 of the remaining vertical space, and will occupy the full width available. --\x3e\n    <map grow="2"/>\n</stack>\n')),(0,i.kt)("h3",{id:"halign-horizontal-align"},(0,i.kt)("inlineCode",{parentName:"h3"},"halign")," (Horizontal Align)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},'"start" | "center" | "end"'),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Describes how the content of a component is aligned ",(0,i.kt)("strong",{parentName:"p"},"horizontally"),". For stacks and splits, the content is the child components. For a component like text, the content is the text itself."),(0,i.kt)("h3",{id:"valign-vertical-align"},(0,i.kt)("inlineCode",{parentName:"h3"},"valign")," (Vertical Align)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},'"start" | "center" | "end"'),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Description"),": Describes how the content of a component is aligned ",(0,i.kt)("strong",{parentName:"p"},"vertically"),". For stacks and splits, the content is the child components. For a component like text, the content is the text itself."),(0,i.kt)("h3",{id:"alignments-effect-on-cross-axis-stretching"},"Alignments Effect on cross-axis stretching"),(0,i.kt)("p",null,"All components will stretch across the cross-axis if the corresponding alignment attribute (",(0,i.kt)("inlineCode",{parentName:"p"},"halign")," for stacks, ",(0,i.kt)("inlineCode",{parentName:"p"},"valign")," for splits) is not set on the parent of that component. But if a cross-axis alignment is set, then they will no longer stretch across the cross axis (otherwise the effect of alignment would not be observed).",(0,i.kt)("br",{parentName:"p"}),"\n","Some components will stretch across the cross-axis even if the cross-axis alignment is set on the parent: map, stack, split."))}g.isMDXComponent=!0}}]);