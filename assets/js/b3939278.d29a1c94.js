"use strict";(globalThis.webpackChunkvertigis_studio_dev_center=globalThis.webpackChunkvertigis_studio_dev_center||[]).push([[3813,2006],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>h});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(i),u=r,h=p["".concat(s,".").concat(u)]||p[u]||m[u]||a;return i?n.createElement(h,o(o({ref:t},d),{},{components:i})):n.createElement(h,o({ref:t},d))}));function h(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=i[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}u.displayName="MDXCreateElement"},5858:(e,t,i)=>{i.d(t,{Z:()=>l});var n=i(9960),r=i(7294),a=i(6010);const o={root:"root_Uwqo"};function l(e){let{title:t,description:i,link:l}=e;return r.createElement("div",{className:(0,a.Z)("card-demo",o.root)},r.createElement("div",{className:"card"},r.createElement("div",{className:"card__header"},r.createElement("h3",null,t)),r.createElement("div",{className:"card__body"},r.createElement("p",null,i)),r.createElement("div",{className:"card__footer"},r.createElement(n.Z,{className:"button button--secondary button--block",to:l},"Get Started"))))}},7467:(e,t,i)=>{i.d(t,{Z:()=>a});var n=i(7294);const r={root:"root_vxd5"};function a(e){let{children:t}=e;return n.createElement("div",{className:r.root},t)}},2349:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=i(7462),r=(i(7294),i(3905));const a={},o=void 0,l={unversionedId:"workflow/snippets/prereqs-web",id:"workflow/snippets/prereqs-web",title:"prereqs-web",description:"Follow the instructions in the Web Applications SDK page to set up your development environment.",source:"@site/docs/workflow/snippets/prereqs-web.mdx",sourceDirName:"workflow/snippets",slug:"/workflow/snippets/prereqs-web",permalink:"/docs/workflow/snippets/prereqs-web",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/workflow/snippets/prereqs-web.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],d={toc:c},p="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(p,(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Follow the instructions in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/workflow/sdk-web-overview"},"Web Applications SDK")," page to set up your development environment."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"A working knowledge of ",(0,r.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," is recommended before extending Workflow for web-based hosts.")))}m.isMDXComponent=!0},6130:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>f,frontMatter:()=>c,metadata:()=>p,toc:()=>u});var n=i(7462),r=(i(7294),i(3905)),a=i(4996),o=i(5858),l=i(7467),s=i(2349);const c={title:"Implement an activity that creates a QR Code image using a Third Party Library",description:"VertiGIS Studio Workflow - Implement a custom activity for web applications that creates a QR code image using a third party library"},d=void 0,p={unversionedId:"workflow/tutorial-web-qr-code-activity",id:"workflow/tutorial-web-qr-code-activity",title:"Implement an activity that creates a QR Code image using a Third Party Library",description:"VertiGIS Studio Workflow - Implement a custom activity for web applications that creates a QR code image using a third party library",source:"@site/docs/workflow/tutorial-web-qr-code-activity.mdx",sourceDirName:"workflow",slug:"/workflow/tutorial-web-qr-code-activity",permalink:"/docs/workflow/tutorial-web-qr-code-activity",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/workflow/tutorial-web-qr-code-activity.mdx",tags:[],version:"current",frontMatter:{title:"Implement an activity that creates a QR Code image using a Third Party Library",description:"VertiGIS Studio Workflow - Implement a custom activity for web applications that creates a QR code image using a third party library"},sidebar:"workflow",previous:{title:"Add a Layer to a Map with an Activity",permalink:"/docs/workflow/tutorial-web-add-layer-to-map"},next:{title:"Implement a Star Rating Custom Form Element",permalink:"/docs/workflow/tutorial-web-implement-star-rating-form-element"}},m={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Overview",id:"overview",level:2},{value:"Adding Dependencies",id:"adding-dependencies",level:2},{value:"Set up Activity Skeleton",id:"set-up-activity-skeleton",level:2},{value:"Implement the Activity",id:"implement-the-activity",level:2},{value:"Deploy the Activity",id:"deploy-the-activity",level:2},{value:"Test the Activity",id:"test-the-activity",level:2},{value:"Enhance the Activity",id:"enhance-the-activity",level:2},{value:"Next Steps",id:"next-steps",level:2}],h={toc:u},y="wrapper";function f(e){let{components:t,...i}=e;return(0,r.kt)(y,(0,n.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Implementing a custom ",(0,r.kt)("a",{parentName:"p",href:"/docs/workflow/key-concepts#activities"},"activity")," allows you to build a reusable, completely custom behavior to augment the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.vertigisstudio.com/workflow/latest/help/Default.htm#wf5/help/activity-reference.htm%3FTocPath%3DActivities%7CActivity%2520Reference%7C_____0"},"existing activities")," that come with VertiGIS Studio Workflow."),(0,r.kt)("p",null,"In this article, you will learn how to create a custom activity that generates a QR code image as a data URL using a third party library."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)(s.default,{mdxType:"WebPrereqs"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Implementing a QR code activity for web applications using a third party library consists of the following steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Adding third party library dependencies to your project."),(0,r.kt)("li",{parentName:"ol"},"Creating the custom activity."),(0,r.kt)("li",{parentName:"ol"},"Implementing the custom activity using the third party library.")),(0,r.kt)("h2",{id:"adding-dependencies"},"Adding Dependencies"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"npm install qrcode")," in the terminal to install the third party ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/soldair/node-qrcode"},"qrcode")," library that generates QR codes."),(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"npm install @types/qrcode")," in the terminal to install type information for the third party library. This is optional, but it provides an improved developer experience.")),(0,r.kt)("h2",{id:"set-up-activity-skeleton"},"Set up Activity Skeleton"),(0,r.kt)("p",null,"To create a new activity:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open the Workflow activity SDK in Visual Studio Code"),(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"npm run generate")," in the terminal."),(0,r.kt)("li",{parentName:"ol"},"When prompted enter the name of the activity you would like to create and press ",(0,r.kt)("inlineCode",{parentName:"li"},"Enter"),". For example, ",(0,r.kt)("inlineCode",{parentName:"li"},"CreateQrCodeImage"),"."),(0,r.kt)("li",{parentName:"ol"},"Open the newly created ",(0,r.kt)("inlineCode",{parentName:"li"},"src/activities/CreateQrCodeImage.ts")," file.")),(0,r.kt)("h2",{id:"implement-the-activity"},"Implement the Activity"),(0,r.kt)("p",null,"Modify the skeleton activity implementation in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/activities/CreateQrCodeImage.ts")," to match the following example which provides a minimal QR code implementation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/activities/CreateQrCodeImage.ts"',title:'"src/activities/CreateQrCodeImage.ts"'},'import type { IActivityHandler } from "@vertigis/workflow/IActivityHandler";\nimport QRCode, { QRCodeToDataURLOptions } from "qrcode";\n\n/** An interface that defines the inputs of the activity. */\nexport interface CreateQrCodeImageInputs {\n    /**\n     * @description The text to encode into the QR code.\n     * @required\n     */\n    text: string;\n}\n\n/** An interface that defines the outputs of the activity. */\nexport interface CreateQrCodeImageOutputs {\n    /**\n     * @description The data URL of the resulting the QR code image.\n     */\n    result: string;\n}\n\n/**\n * @displayName Create QR Code Image\n * @category Custom Activities\n * @defaultName qrCode\n * @description Creates a QR code image as a data URL.\n */\nexport class CreateQrCodeImage implements IActivityHandler {\n    async execute(\n        inputs: CreateQrCodeImageInputs\n    ): Promise<CreateQrCodeImageOutputs> {\n        const { text } = inputs;\n\n        // Generate the QR code\n        const dataUrl = await QRCode.toDataURL(text);\n\n        return {\n            result: dataUrl,\n        };\n    }\n}\n')),(0,r.kt)("h2",{id:"deploy-the-activity"},"Deploy the Activity"),(0,r.kt)("p",null,"Follow the instructions to ",(0,r.kt)("a",{parentName:"p",href:"/docs/workflow/sdk-web-overview#deployment"},"build and deploy the activity pack"),"."),(0,r.kt)("h2",{id:"test-the-activity"},"Test the Activity"),(0,r.kt)("p",null,"Once your activity pack is hosted and registered, your custom activity should appear in the activity toolbox in VertiGIS Studio Workflow Designer alongside the built-in activities, and can be used in the graphical interface like any other activity."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"result")," output of the activity is a data URL. You can use the ",(0,r.kt)("strong",{parentName:"p"},"Set Form Element Property")," activity to assign the URL to the ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," property of an ",(0,r.kt)("strong",{parentName:"p"},"Image")," form element.")),(0,r.kt)("p",null,"Now you can build a workflow that uses your new custom activity!"),(0,r.kt)("h2",{id:"enhance-the-activity"},"Enhance the Activity"),(0,r.kt)("p",null,"Once you've seen your activity in action you may want to take advantage of the many different options offered by the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/soldair/node-qrcode"},"qrcode")," library. To do this you can add additional inputs to the activity that correspond to options on the ",(0,r.kt)("inlineCode",{parentName:"p"},"QRCode.toDataURL(text: string, options?: QRCodeToDataURLOptions)")," method."),(0,r.kt)("p",null,"Modify the previous activity implementation in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/activities/CreateQrCodeImage.ts")," to match the following more complete example."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/activities/CreateQrCodeImage.ts"',title:'"src/activities/CreateQrCodeImage.ts"'},'import type { IActivityHandler } from "@vertigis/workflow/IActivityHandler";\nimport QRCode, { QRCodeToDataURLOptions } from "qrcode";\n\n/** An interface that defines the inputs of the activity. */\nexport interface CreateQrCodeImageInputs {\n    /**\n     * @description The text or data to encode into the QR code.\n     * @required\n     */\n    text:\n        | string\n        | {\n              data: string;\n              mode: "alphanumeric" | "numeric" | "kanji" | "byte";\n          }[];\n\n    /**\n     * @description The RGBA color of the dark module. The default is #000000ff (black).\n     */\n    darkColor?: string;\n\n    /**\n     * @description Error correction level. The default is medium.\n     */\n    errorCorrectionLevel?: "low" | "medium" | "quartile" | "high";\n\n    /**\n     * @description The RGBA color of the light module. The default is #ffffffff (white).\n     */\n    lightColor?: string;\n\n    /**\n     * @description The size of the quiet zone around the QR code. The default is 4.\n     */\n    margin?: number;\n\n    /**\n     * @description A Number between 0 and 1 indicating image quality if the requested type is image/jpeg or image/webp. The default is 0.92.\n     */\n    quality?: number;\n\n    /**\n     * @description The Scale factor. A value of 1 means 1px per modules (black dots). The default is 4.\n     */\n    scale?: number;\n\n    /**\n     * @description The image format. The default is image/png.\n     */\n    type?: "image/png" | "image/jpeg" | "image/webp";\n\n    /**\n     * @description The width of the output image. If the width is too small to contain the QR code, this option will be ignored. This input takes precedence over the scale input.\n     */\n    width?: number;\n\n    /**\n     * @description The QR Code version. A number between 1 and 40. If not specified, a suitable value will be calculated.\n     */\n    version?: number;\n}\n\n/** An interface that defines the outputs of the activity. */\nexport interface CreateQrCodeImageOutputs {\n    /**\n     * @description The data URL of the resulting the QR code image.\n     */\n    result: string;\n}\n\n/**\n * @displayName Create QR Code Image\n * @category Custom Activities\n * @defaultName qrCode\n * @description Creates a QR code image as a data URL.\n */\nexport class CreateQrCodeImage implements IActivityHandler {\n    async execute(\n        inputs: CreateQrCodeImageInputs\n    ): Promise<CreateQrCodeImageOutputs> {\n        const { darkColor, lightColor, quality, text, ...other } =\n            inputs;\n\n        // Assemble the QR code options from the activity inputs\n        const options: QRCodeToDataURLOptions = {\n            ...other,\n            color: {\n                dark: darkColor,\n                light: lightColor,\n            },\n            rendererOpts: {\n                quality,\n            },\n        };\n\n        // Generate the QR code\n        const dataUrl = await QRCode.toDataURL(text, options);\n\n        return {\n            result: dataUrl,\n        };\n    }\n}\n')),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)(l.Z,{mdxType:"UseCaseContainer"},(0,r.kt)(o.Z,{title:"Learn how to create a QR Code form element",description:"Learn how to to use this same third party library to create a form element that generates and displays QR codes",link:(0,a.Z)("docs/workflow/tutorial-web-implement-third-party-qr-code-form-element"),mdxType:"UseCaseCard"})))}f.isMDXComponent=!0}}]);