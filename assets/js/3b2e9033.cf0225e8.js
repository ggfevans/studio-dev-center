"use strict";(globalThis.webpackChunkvertigis_studio_dev_center=globalThis.webpackChunkvertigis_studio_dev_center||[]).push([[400,9362,826],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=o,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?i.createElement(f,r(r({ref:t},u),{},{components:n})):i.createElement(f,r({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,r[1]=l;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>r});var i=n(7294),o=n(6010);const a={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:n,className:r}=e;return i.createElement("div",{role:"tabpanel",className:(0,o.Z)(a.tabItem,r),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var i=n(7462),o=n(7294),a=n(6010),r=n(2466),l=n(6550),s=n(1980),c=n(7392),u=n(12);function p(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:i,default:o}}=e;return{value:t,label:n,attributes:i,default:o}}))}function m(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const i=(0,l.k6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(a),(0,o.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(i.location.search);t.set(a,e),i.replace({...i.location,search:t.toString()})}),[a,i])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,a=m(e),[r,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const i=n.find((e=>e.default))??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:a}))),[s,c]=f({queryString:n,groupId:i}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,a]=(0,u.Nk)(n);return[i,(0,o.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:i}),y=(()=>{const e=s??p;return d({value:e,tabValues:a})?e:null})();(0,o.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!d({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),g(e)}),[c,g,a]),tabValues:a}}var y=n(2389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,r.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),i=c[n].value;i!==l&&(p(t),s(i))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,i.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:m},r,{className:(0,a.Z)("tabs__item",h.tabItem,r?.className,{"tabs__item--active":l===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:i}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===i));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==i}))))}function b(e){const t=g(e);return o.createElement("div",{className:(0,a.Z)("tabs-container",h.tabList)},o.createElement(k,(0,i.Z)({},e,t)),o.createElement(v,(0,i.Z)({},e,t)))}function w(e){const t=(0,y.Z)();return o.createElement(b,(0,i.Z)({key:String(t)},e))}},5858:(e,t,n)=>{n.d(t,{Z:()=>l});var i=n(9960),o=n(7294),a=n(6010);const r={root:"root_Uwqo"};function l(e){let{title:t,description:n,link:l}=e;return o.createElement("div",{className:(0,a.Z)("card-demo",r.root)},o.createElement("div",{className:"card"},o.createElement("div",{className:"card__header"},o.createElement("h3",null,t)),o.createElement("div",{className:"card__body"},o.createElement("p",null,n)),o.createElement("div",{className:"card__footer"},o.createElement(i.Z,{className:"button button--secondary button--block",to:l},"Get Started"))))}},7467:(e,t,n)=>{n.d(t,{Z:()=>a});var i=n(7294);const o={root:"root_vxd5"};function a(e){let{children:t}=e;return i.createElement("div",{className:o.root},t)}},9241:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(7462),o=(n(7294),n(3905));const a={},r=void 0,l={unversionedId:"snippets/workflow-url",id:"snippets/workflow-url",title:"workflow-url",description:"https://apps.vertigisstudio.com/workflow/designer/#workflow=",source:"@site/docs/snippets/workflow-url.mdx",sourceDirName:"snippets",slug:"/snippets/workflow-url",permalink:"/docs/snippets/workflow-url",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/snippets/workflow-url.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{class:"alert alert--secondary",role:"alert"},"https://apps.vertigisstudio.com/workflow/designer/#workflow=",(0,o.kt)("b",null,"44010fc421dd4659b74fb921e09ba594")),(0,o.kt)("br",null))}m.isMDXComponent=!0},293:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(7462),o=(n(7294),n(3905));const a={},r=void 0,l={unversionedId:"workflow/snippets/prereqs-mobile",id:"workflow/snippets/prereqs-mobile",title:"prereqs-mobile",description:"Extending VertiGIS Studio Workflow for Mobile requires development and deployment of a custom VertiGIS Studio Mobile Application using the VertiGIS Studio Mobile SDK",source:"@site/docs/workflow/snippets/prereqs-mobile.mdx",sourceDirName:"workflow/snippets",slug:"/workflow/snippets/prereqs-mobile",permalink:"/docs/workflow/snippets/prereqs-mobile",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/workflow/snippets/prereqs-mobile.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Important",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Extending VertiGIS Studio Workflow for Mobile requires development and deployment of a custom VertiGIS Studio Mobile Application using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/sdk-overview"},"VertiGIS Studio Mobile SDK"))),(0,o.kt)("p",null,"Follow the instructions in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/workflow/sdk-mobile-overview"},"VertiGIS Studio Mobile SDK")," page to set up the environment for extending Workflow for VertiGIS Studio Mobile."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"A working knowledge of ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-ca/dotnet/csharp/"},"C#")," and ",(0,o.kt)("a",{parentName:"p",href:"https://dotnet.microsoft.com/platform/dotnet-standard"},".NET Standard")," is recommended before extending Workflow for VertiGIS Studio Mobile")))}m.isMDXComponent=!0},7654:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>d,default:()=>v,frontMatter:()=>m,metadata:()=>f,toc:()=>y});var i=n(7462),o=(n(7294),n(3905)),a=n(293),r=n(9241),l=n(4996),s=n(7467),c=n(5858),u=n(4866),p=n(5162);const m={title:"Implement an Activity that Calculates a Logarithm",description:"VertiGIS Studio Workflow - Implement a custom activity for VertiGIS Studio Mobile"},d=void 0,f={unversionedId:"workflow/tutorial-mobile-calculate-logarithm-activity",id:"workflow/tutorial-mobile-calculate-logarithm-activity",title:"Implement an Activity that Calculates a Logarithm",description:"VertiGIS Studio Workflow - Implement a custom activity for VertiGIS Studio Mobile",source:"@site/docs/workflow/tutorial-mobile-calculate-logarithm-activity.mdx",sourceDirName:"workflow",slug:"/workflow/tutorial-mobile-calculate-logarithm-activity",permalink:"/docs/workflow/tutorial-mobile-calculate-logarithm-activity",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/workflow/tutorial-mobile-calculate-logarithm-activity.mdx",tags:[],version:"current",frontMatter:{title:"Implement an Activity that Calculates a Logarithm",description:"VertiGIS Studio Workflow - Implement a custom activity for VertiGIS Studio Mobile"},sidebar:"workflow",previous:{title:"Reference a Third Party Library",permalink:"/docs/workflow/sdk-mobile-reference-third-party-library"},next:{title:"Show a Callout on the Map with an Activity",permalink:"/docs/workflow/tutorial-mobile-show-map-callout"}},g={},y=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Set up the Activity Skeleton",id:"set-up-the-activity-skeleton",level:2},{value:"Register the Activity with the <code>IActivityHandlerFactory</code>",id:"register-the-activity-with-the-iactivityhandlerfactory",level:2},{value:"Implement the Custom Activity",id:"implement-the-custom-activity",level:2},{value:"Test your Activity",id:"test-your-activity",level:2},{value:"Relevant SDK Sample",id:"relevant-sdk-sample",level:2},{value:"Next Steps",id:"next-steps",level:2}],h={toc:y},k="wrapper";function v(e){let{components:t,...n}=e;return(0,o.kt)(k,(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Implementing a custom ",(0,o.kt)("a",{parentName:"p",href:"/docs/workflow/key-concepts#activities"},"activity")," allows you to build a reusable, completely custom behavior to augment the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.vertigisstudio.com/workflow/latest/help/Default.htm#wf5/help/activity-reference.htm%3FTocPath%3DActivities%7CActivity%2520Reference%7C_____0"},"existing activities")," that come with VertiGIS Studio Workflow."),(0,o.kt)("p",null,"In this article, you will learn how to create a custom activity that calculates the logarithm of a number with a given base."),(0,o.kt)("img",{src:(0,l.Z)("img/workflow-mobile-calculate-logarithm-activity.png")}),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)(a.default,{mdxType:"MobilePrereqs"}),(0,o.kt)("h2",{id:"set-up-the-activity-skeleton"},"Set up the Activity Skeleton"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a new file ",(0,o.kt)("inlineCode",{parentName:"li"},"CalculateLog.cs")," in the platform agnostic project of the VertiGIS Studio Mobile ",(0,o.kt)("a",{parentName:"li",href:"/docs/mobile/sdk-overview"},"Quickstart"),"."),(0,o.kt)("li",{parentName:"ol"},"Add a new skeleton workflow activity that implements ",(0,o.kt)("inlineCode",{parentName:"li"},"IActivityHandler"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs",metastring:'title="App1/App1/CalculateLog.cs"',title:'"App1/App1/CalculateLog.cs"'},'using App1.Workflow;\nusing VertiGIS.Mobile.Composition;\nusing VertiGIS.Workflow.Runtime;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\n\n[assembly: Export(typeof(CalculateLog))]\nnamespace App1.Workflow\n{\n    public class CalculateLog : IActivityHandler\n    {\n        public static string Action { get; } = "uuid:<uuid>::CalculateLog";\n\n        public Task<IDictionary<string, object>> Execute(IDictionary<string, object> inputs, IActivityContext context)\n        {\n            return Task.FromResult((IDictionary<string, object>)new Dictionary<string, object>());\n        }\n    }\n}\n')),(0,o.kt)("h2",{id:"register-the-activity-with-the-iactivityhandlerfactory"},"Register the Activity with the ",(0,o.kt)("inlineCode",{parentName:"h2"},"IActivityHandlerFactory")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a new file, ",(0,o.kt)("inlineCode",{parentName:"li"},"ActivityLoader.cs")," in the platform agnostic project of the VertiGIS Studio Mobile ",(0,o.kt)("a",{parentName:"li",href:"/docs/mobile/sdk-overview"},"Quickstart"),"."),(0,o.kt)("li",{parentName:"ol"},"Implement the ",(0,o.kt)("inlineCode",{parentName:"li"},"IActivityHandlerFactory")," interface and register the activity skeleton we created in the constructor.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Learn more about activity registration in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/workflow/sdk-mobile-activity-reference"},"activity reference"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs",metastring:'title="App1/App1/ActivityLoader.cs"',title:'"App1/App1/ActivityLoader.cs"'},'using System;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing VertiGIS.Mobile.Composition;\nusing VertiGIS.Workflow.Runtime;\nusing VertiGIS.Workflow.Runtime.Definition;\nusing VertiGIS.Workflow.Runtime.Execution;\nusing App1.Workflow;\n\n[assembly: Export(typeof(ActivityLoader), SingleInstance = true, AsImplementedInterfaces = true)]\nnamespace App1.Workflow\n{\n    public class ActivityLoader : IActivityHandlerFactory\n    {\n        /// <summary>\n        /// Gets a mapping of action names to implementations of <see cref="IActivityHandler"/>s.\n        /// </summary>\n        private Dictionary<string, Func<IActivityHandler>> RegisteredActivities { get; } = new Dictionary<string, Func<IActivityHandler>>();\n\n        public ActivityLoader(Func<CalculateLog> calculateLogFactory)\n        {\n            RegisteredActivities[CalculateLog.Action] = calculateLogFactory;\n        }\n\n        /// <summary>\n        /// Creates an <see cref="IActivityHandler"/>.\n        /// </summary>\n        /// <param name="action">The name of the action to create.</param>\n        /// <param name="token">The cancellation token.</param>\n        /// <param name="inspector">The <see cref="ProgramInspector"/> for the program.</param>\n        /// <returns>The activity handler for the given action.</returns>\n        public Task<IActivityHandler> Create(string action, CancellationToken token, ProgramInspector inspector = null)\n        {\n            if (action == null || token.IsCancellationRequested)\n            {\n                return Task.FromResult<IActivityHandler>(null);\n            }\n\n            if (RegisteredActivities.TryGetValue(action, out Func<IActivityHandler> handlerType))\n            {\n                return Task.FromResult(handlerType());\n            }\n            else\n            {\n                return Task.FromResult<IActivityHandler>(null);\n            }\n        }\n    }\n}\n')),(0,o.kt)("h2",{id:"implement-the-custom-activity"},"Implement the Custom Activity"),(0,o.kt)("p",null,"We now have a empty activity that VertiGIS Studio Mobile can use that takes no inputs and produces no outputs. By changing the inputs, outputs, and execute logic, you can create your own custom activity that calculates the logarithm of a number."),(0,o.kt)("p",null,"First, let's change the execute logic to parse inputs that make sense for a logarithm activity."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs",metastring:'title="App1/App1/CalculateLog.cs"',title:'"App1/App1/CalculateLog.cs"'},'using App1.Workflow;\nusing VertiGIS.Mobile.Composition;\nusing VertiGIS.Workflow.Runtime;\nusing System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\n\n[assembly: Export(typeof(CalculateLog))]\nnamespace App1.Workflow\n{\n    public class CalculateLog : IActivityHandler\n    {\n        public const string Action = "uuid:<uuid>::CalculateLog";\n\n        public Task<IDictionary<string, object>> Execute(IDictionary<string, object> inputs, IActivityContext context)\n        {\n            // highlight-start\n            double? logBase = null;\n            if (inputs.ContainsKey("base"))\n            {\n                logBase = inputs["base"] as double?;\n            }\n            var value = (double)inputs["value"];\n            // highlight-end\n\n            return Task.FromResult((IDictionary<string, object>)new Dictionary<string, object>());\n        }\n    }\n}\n')),(0,o.kt)("p",null,"Next, modify the ",(0,o.kt)("inlineCode",{parentName:"p"},"Execute")," method of the activity to calculate the logarithm of a number given an optional base"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs",metastring:'title="App1/App1/CalculateLog.cs"',title:'"App1/App1/CalculateLog.cs"'},'using App1.Workflow;\nusing VertiGIS.Mobile.Composition;\nusing VertiGIS.Workflow.Runtime;\nusing System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\n\n[assembly: Export(typeof(CalculateLog))]\nnamespace App1.Workflow\n{\n    public class CalculateLog : IActivityHandler\n    {\n        public const string Action = "uuid:<uuid>::CalculateLog";\n\n        public Task<IDictionary<string, object>> Execute(IDictionary<string, object> inputs, IActivityContext context)\n        {\n            double? logBase = null;\n            if (inputs.ContainsKey("base"))\n            {\n                logBase = inputs["base"] as double?;\n            }\n            var value = (double)inputs["value"];\n\n            // highlight-start\n            double logResult;\n            if (logBase != null)\n            {\n                logResult = Math.Log(value, (double)logBase);\n            }\n            else\n            {\n                logResult = Math.Log(value);\n            }\n\n            return Task.FromResult((IDictionary<string, object>)new Dictionary<string, object>()\n            {\n                ["result"] = logResult\n            });\n            // highlight-end\n        }\n    }\n}\n')),(0,o.kt)("h2",{id:"test-your-activity"},"Test your Activity"),(0,o.kt)("p",null,"Now you can ",(0,o.kt)("a",{parentName:"p",href:"https://docs.vertigisstudio.com/mobileviewer/latest/admin-help/Default.htm#gmv/designer/add-a-workflow-to-an-app.htm"},"build a workflow for VertiGIS Studio Mobile")," that uses your new activity!"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you want your custom activity to show up with a friendly user interface in VertiGIS Studio Workflow Designer, check out ",(0,o.kt)("a",{parentName:"p",href:"/docs/workflow/sdk-net-register-activities"},"Registering .NET Activities with VertiGIS Studio Workflow Designer"),".")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://docs.vertigisstudio.com/workflow/latest/help/Default.htm#wf5/help/activities/run-activity.htm%3FTocPath%3DActivities%7CActivity%2520Reference%7C_____167"},(0,o.kt)("inlineCode",{parentName:"a"},"RunActivity"))," activity can be used to execute your activity by the name defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"CalculateLog.cs")," (for this example, ",(0,o.kt)("inlineCode",{parentName:"p"},"uuid:<uuid>::CalculateLog"),")."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",null,"You can"," ",(0,o.kt)("a",{href:(0,l.Z)("workflows/mobile-calculate-logarithm-activity.json"),download:"calculate-log-activity.json",target:"_blank"},"download this demo workflow")," ","that runs the custom activity and",(0,o.kt)("a",{href:"https://docs.vertigisstudio.com/workflow/latest/help/Default.htm#wf5/help/import-export-workflows.htm",target:"_blank"}," ","import it into the VertiGIS Studio Workflow Designer."," "))),(0,o.kt)("p",null,"Next you need to run the workflow you just created in your VertiGIS Studio Mobile SDK project."),(0,o.kt)("p",null,"You can do this by configuring the layout and app config to run a workflow. You will need to copy the ID of the the workflow you created into the app.json"),(0,o.kt)(r.default,{mdxType:"WorkflowUrlSnippet"}),(0,o.kt)(u.Z,{defaultValue:"config",values:[{label:"App Config",value:"config"},{label:"Layout",value:"layout"},{label:"UI",value:"ui"}],mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"config",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="App1/App1/app.json"',title:'"App1/App1/app.json"'},'{\n    "schemaVersion": "1.0",\n    "items": [\n        {\n            "$type": "layout",\n            "id": "desktop-layout",\n            "url": "resource://layout-large.xml",\n            "tags": ["large"]\n        },\n        {\n            "$type": "workflow",\n            "id": "custom-workflow",\n            "title": "Custom Workflow",\n            "target": "#taskbar",\n            // highlight-next-line\n            "portalItem": "<your-workflow-id>"\n        },\n        {\n            "$type": "menu",\n            "id": "iwtm",\n            "items": [\n                {\n                    "title": "Run Custom Workflow",\n                    "isEnabled": true,\n                    "iconId": "workflow",\n                    "action": {\n                        "name": "workflow.run",\n                        "arguments": {\n                            "id": "custom-workflow"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}\n'))),(0,o.kt)(p.Z,{value:"layout",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="App1/App1/layout-large.xml"',title:'"App1/App1/layout-large.xml"'},'<?xml version="1.0" encoding="utf-8" ?>\n<layout\n    xmlns="https://geocortex.com/layout/v1"\n    xmlns:gxm="https://geocortex.com/layout/mobile/v1"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="https://geocortex.com/layout/v1 ../../ViewerSpec/layout/layout-mobile.xsd">\n    <gxm:taskbar id="taskbar" orientation="vertical">\n        <map slot="main">\n            <stack margin="0.8" slot="top-right" halign="end">\n                <iwtm config="iwtm"/>\n            </stack>\n        </map>\n    </gxm:taskbar>\n</layout>\n'))),(0,o.kt)(p.Z,{value:"ui",mdxType:"TabItem"},(0,o.kt)("img",{src:(0,l.Z)("img/workflow-mobile-calculate-logarithm-activity.png")}))),(0,o.kt)("h2",{id:"relevant-sdk-sample"},"Relevant SDK Sample"),(0,o.kt)("p",null,"Check out the relevant VertiGIS Studio Mobile SDK Sample:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/geocortex/vertigis-mobile-samples/tree/master/Geocortex.Mobile.Samples/Geocortex.Mobile.Samples/Samples/Workflow/CustomActivity"},"Custom Workflow Activity"))),(0,o.kt)("h2",{id:"next-steps"},"Next Steps"),(0,o.kt)("p",null,"Now you know how to build a basic Workflow activity for VertiGIS Studio Mobile. Next, you can learn how to access app properties in an activity, build custom form elements, use the ArcGIS Runtime SDK for .NET in your activities and more."),(0,o.kt)(s.Z,{mdxType:"UseCaseContainer"},(0,o.kt)(c.Z,{title:"Implement a Custom Form Element",description:"Implement a custom form element for applications like VertiGIS Studio Mobile",link:(0,l.Z)("docs/workflow/tutorial-mobile-activity-indicator-form-element"),mdxType:"UseCaseCard"}),(0,o.kt)(c.Z,{title:"Add a Callout to the Map through a Custom Activity",description:"Access the map in custom activities for VertiGIS Studio Mobile",link:(0,l.Z)("docs/workflow/tutorial-mobile-show-map-callout"),mdxType:"UseCaseCard"}),(0,o.kt)(c.Z,{title:"Use the ArcGIS Runtime SDK for .NET in an activity.",description:"Use the ArcGIS Runtime SDK for .NET in an activity or form element",link:(0,l.Z)("docs/workflow/sdk-net-integrating-the-arcgis-api"),mdxType:"UseCaseCard"}),(0,o.kt)(c.Z,{title:"Reference other Third Party Libraries",description:"Reference other third party libraries in your activities and form elements",link:(0,l.Z)("docs/workflow/sdk-mobile-reference-third-party-library"),mdxType:"UseCaseCard"})))}v.isMDXComponent=!0}}]);