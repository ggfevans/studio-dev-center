"use strict";(globalThis.webpackChunkvertigis_studio_dev_center=globalThis.webpackChunkvertigis_studio_dev_center||[]).push([[7833,5343,7499],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),d=o,f=c["".concat(l,".").concat(d)]||c[d]||m[d]||i;return n?a.createElement(f,r(r({ref:t},u),{},{components:n})):a.createElement(f,r({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),o=n(6010);const i={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(i.tabItem,r),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),o=n(7294),i=n(6010),r=n(2466),s=n(6550),l=n(1980),p=n(7392),u=n(12);function c(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function m(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(i),(0,o.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=m(e),[r,s]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[l,p]=f({queryString:n,groupId:a}),[c,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,u.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),h=(()=>{const e=l??c;return d({value:e,tabValues:i})?e:null})();(0,o.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!d({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),g(e)}),[p,g,i]),tabValues:i}}var h=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:s,selectValue:l,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==s&&(c(t),l(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:m},r,{className:(0,i.Z)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":s===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=g(e);return o.createElement("div",{className:(0,i.Z)("tabs-container",b.tabList)},o.createElement(y,(0,a.Z)({},e,t)),o.createElement(k,(0,a.Z)({},e,t)))}function N(e){const t=(0,h.Z)();return o.createElement(v,(0,a.Z)({key:String(t)},e))}},9119:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>b,frontMatter:()=>u,metadata:()=>m,toc:()=>f});var a=n(7462),o=(n(7294),n(3905)),i=n(3659),r=n(6557),s=n(4996),l=n(4866),p=n(5162);const u={title:"App Config Reference",description:"VertiGIS Studio Mobile - App config reference"},c=void 0,m={unversionedId:"mobile/configuration-app-config-reference",id:"mobile/configuration-app-config-reference",title:"App Config Reference",description:"VertiGIS Studio Mobile - App config reference",source:"@site/docs/mobile/configuration-app-config-reference.mdx",sourceDirName:"mobile",slug:"/mobile/configuration-app-config-reference",permalink:"/docs/mobile/configuration-app-config-reference",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/mobile/configuration-app-config-reference.mdx",tags:[],version:"current",frontMatter:{title:"App Config Reference",description:"VertiGIS Studio Mobile - App config reference"},sidebar:"mobile",previous:{title:"Getting Started",permalink:"/docs/mobile/configuration-app-config-getting-started"},next:{title:"Configuring the Theme",permalink:"/docs/mobile/configuration-theme"}},d={},f=[{value:"Schema Properties",id:"schema-properties",level:2},{value:"App Items",id:"app-items",level:2},{value:"Custom App Items",id:"custom-app-items",level:3},{value:"Item URIs and Resource URIs",id:"item-uris-and-resource-uris",level:2},{value:"Reusing Config",id:"reusing-config",level:2},{value:"Internationalization",id:"internationalization",level:2}],g={toc:f},h="wrapper";function b(e){let{components:t,...n}=e;return(0,o.kt)(h,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"schema-properties"},"Schema Properties"),(0,o.kt)("p",null,"The two properties ",(0,o.kt)("inlineCode",{parentName:"p"},"$schema")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"schemaVersion")," should always be present in an ",(0,o.kt)("inlineCode",{parentName:"p"},"app.json")," file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "..\\\\..\\\\ViewerFramework\\\\app-config\\\\mobile\\\\mobile-app-config.schema.json",\n\n  "schemaVersion": "1.0",\n\n  "items": [...]\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"$schema")," property powers the Visual Studio intellisense in the ",(0,o.kt)("inlineCode",{parentName:"p"},"app.json")," file for the various properties that each ",(0,o.kt)("strong",{parentName:"p"},"app item")," has. The ",(0,o.kt)("inlineCode",{parentName:"p"},"app.json")," included with the ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/sdk-edit-layout-app-config"},"Quickstart")," references a schema at the root of the project. If you move an ",(0,o.kt)("inlineCode",{parentName:"p"},"app.json")," file, you will need to fix the relative path to the schema file. For more information on json schemas, see ",(0,o.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"json-schema.org"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"ViewerFramework")," folder containing the schema will not be created until an initial build is complete.")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"schemaVersion")," property is a required property that informs VertiGIS Studio Mobile what version of app config you are using. This allows for the schema to be updated in future releases without breaking old configuration."),(0,o.kt)("h2",{id:"app-items"},"App Items"),(0,o.kt)(i.default,{mdxType:"AppItemSnippet"}),(0,o.kt)("h3",{id:"custom-app-items"},"Custom App Items"),(0,o.kt)("p",null,"App items in VertiGIS Studio Mobile correspond to a class that extends ",(0,o.kt)("inlineCode",{parentName:"p"},"VisualAppItem")," and registers with ",(0,o.kt)("strong",{parentName:"p"},"Autofac")," as an ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/sdk-dependency-injection#appitem"},(0,o.kt)("inlineCode",{parentName:"a"},"AppItem")," type"),", like the ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomComponentConfiguration")," in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/tutorial-implement-component-participate-app-config#create-a-skeleton-app-config-definition"},"app config tutorial"),"."),(0,o.kt)(r.default,{mdxType:"AutofacSnippet"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},'[assembly: AppItem(CustomComponentConfiguration.ConfigItemtype, typeof(CustomComponentConfiguration))]\nnamespace App1.Configuration\n{\n    public class CustomComponentConfiguration : VisualAppItem\n    {\n        public const string ConfigItemtype = "custom-component-config";\n\n        ... // config properties, etc\n\n    }\n}\n')),(0,o.kt)("p",null,"Registering a class in this manner makes mobile aware of a new ",(0,o.kt)("strong",{parentName:"p"},"app item type"),", which can be added to the items list in the ",(0,o.kt)("inlineCode",{parentName:"p"},"app.json")," with the appropriate ",(0,o.kt)("inlineCode",{parentName:"p"},"$type")," specified. Components can consume these app items, and by extension, the configuration. Check out ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/sdk-components-reference#configuration-models"},"component configuration models")," for more details."),(0,o.kt)("h2",{id:"item-uris-and-resource-uris"},"Item URIs and Resource URIs"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Item URIs")," are a commonly used pattern in the ",(0,o.kt)("inlineCode",{parentName:"p"},"app.json")," to uniquely identify and reference app items. They take the format"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"item://<item-type>/<item-id>")),(0,o.kt)("p",null,"For example, the item URI for the following item is ",(0,o.kt)("inlineCode",{parentName:"p"},"item://menu-item/measureAction")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$type": "menu",\n  "id": "feature-actions",\n  "items": [...]\n}\n')),(0,o.kt)("p",null,"These item URIs can be used by app items to include other app items as property values, allowing reuse."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "$type": "feature-details",\n    "id": "feature-details",\n    "featureActions": "item://menu/feature-actions"\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Resource URIs")," are used to load layouts in VertiGIS Studio Mobile. Layout files are ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/tutorial-add-medium-layout"},"added to VertiGIS Studio Mobile")," as an asset which is copied into the end users local data folder. These copied assets are referenced with a URI of the format"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"resource://layout-<size>.xml")),(0,o.kt)("p",null,"For example, here's references to a small, medium, and large layout in the ",(0,o.kt)("inlineCode",{parentName:"p"},"app.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "schemaVersion": "1.0",\n  "items":[\n    ...\n    {\n        "$type": "layout",\n        "id": "desktop-layout",\n        "url": "resource://layout-large.xml",\n        "tags": ["mobile", "large"]\n    },\n    {\n        "$type": "layout",\n        "id": "tablet-layout",\n        "url": "resource://layout-medium.xml",\n        "tags": ["mobile", "medium"]\n    },\n    {\n        "$type": "layout",\n        "id": "handheld-layout",\n        "url": "resource://layout-small.xml",\n        "tags": ["mobile", "small"]\n    }\n    ...\n  ]\n}\n')),(0,o.kt)("h2",{id:"reusing-config"},"Reusing Config"),(0,o.kt)("p",null,"The same config can be used for multiple items in a layout. For example, this allows you to reuse the same button in multiple locations in the App."),(0,o.kt)(l.Z,{defaultValue:"layout",values:[{label:"Layout",value:"layout"},{label:"App Config",value:"config"},{label:"User Interface",value:"ui"}],mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"layout",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8" ?>\n<layout xmlns="https://geocortex.com/layout/v1"\n        xmlns:gxm="https://geocortex.com/layout/mobile/v1">\n  <gxm:taskbar orientation="vertical">\n    <panel grow="1">\n        <stack margin="0.5">\n            // highlight-next-line\n          <button icon="info" config="do-something" slot="top-center-visible" margin="0.5">Do Something 2</button>\n        </stack>\n    </panel>\n    <map slot="main">\n      // highlight-next-line\n      <button icon="info" config="do-something" slot="top-center-visible" margin="0.5">Do Something 1</button>\n    </map>\n  </gxm:taskbar>\n</layout>\n'))),(0,o.kt)(p.Z,{value:"config",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "schemaVersion": "1.0",\n    "items": [\n        {\n            "$type": "layout",\n            "id": "desktop-layout",\n            "url": "resource://layout-large.xml",\n            "tags": ["mobile", "large"]\n        },\n        {\n            "$type": "menu-item",\n            // highlight-next-line\n            "id": "do-something",\n            "title": "ui.alert",\n            "isEnabled": true,\n            "iconId": "info",\n            "action": {\n                "name": "ui.alert",\n                "arguments": {\n                    "title": "Something?",\n                    "message": "Fine, I did it",\n                    "buttonText": "OK"\n                }\n            }\n        }\n    ]\n}\n'))),(0,o.kt)(p.Z,{value:"ui",mdxType:"TabItem"},(0,o.kt)("img",{src:(0,s.Z)("img/mobile-app-config-linking.png")}))),(0,o.kt)("h2",{id:"internationalization"},"Internationalization"),(0,o.kt)("p",null,"All language strings used for properties in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/configuration-app-config-getting-started"},"app config"),', like "title" or "description", are automatically translated by the application.'),(0,o.kt)("p",null,"Learn more about how to ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/sdk-internationalization"},"use and create language resources"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "schemaVersion": "1.0",\n    "items": [\n        ...\n        {\n            "$type": "menu-item",\n            "id": "zoom-to-extent",\n            "iconId": "zoom-extent",\n            "title": "language-zoom-extent-title",\n            "description": "language-zoom-extent-description",\n            "action": "map.zoom-to-layer-extent"\n        },\n        ...\n    ]\n}\n')))}b.isMDXComponent=!0},3659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={},r=void 0,s={unversionedId:"snippets/app-item",id:"snippets/app-item",title:"app-item",description:"An app config file is composed of a list of app items. App items can potentially be anything. Each app item has an item $type, which viewer is aware of and knows how to locate and load. They usually they represent configuration for components, maps, portal items, or shared data. All item app configuration is specified within the items array of the app.json file.",source:"@site/docs/snippets/app-item.mdx",sourceDirName:"snippets",slug:"/snippets/app-item",permalink:"/docs/snippets/app-item",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/snippets/app-item.mdx",tags:[],version:"current",frontMatter:{}},l={},p=[],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An app config file is composed of a list of ",(0,o.kt)("strong",{parentName:"p"},"app items"),". App items can potentially be anything. Each app item has an ",(0,o.kt)("strong",{parentName:"p"},"item ",(0,o.kt)("inlineCode",{parentName:"strong"},"$type")),", which viewer is aware of and knows how to locate and load. They usually they represent configuration for components, maps, portal items, or shared data. All item app configuration is specified within the ",(0,o.kt)("inlineCode",{parentName:"p"},"items")," array of the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"app.json"))," file."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Each component can only load a certain ",(0,o.kt)("inlineCode",{parentName:"p"},"$type")," of app item which corresponds to it. For example, ",(0,o.kt)("inlineCode",{parentName:"p"},"<map>")," components can only load app items of type ",(0,o.kt)("inlineCode",{parentName:"p"},"map-extension")," as their configuration.")))}m.isMDXComponent=!0},6557:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={},r=void 0,s={unversionedId:"snippets/autofac-mobile",id:"snippets/autofac-mobile",title:"autofac-mobile",description:"VertiGIS Studio Mobile uses Autofac to register, locate, and inject components, services and other classes. See dependency injection for more info.",source:"@site/docs/snippets/autofac-mobile.mdx",sourceDirName:"snippets",slug:"/snippets/autofac-mobile",permalink:"/docs/snippets/autofac-mobile",draft:!1,editUrl:"https://github.com/vertigis/studio-dev-center/edit/master/docs/snippets/autofac-mobile.mdx",tags:[],version:"current",frontMatter:{}},l={},p=[],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"VertiGIS Studio Mobile uses ",(0,o.kt)("a",{parentName:"p",href:"https://autofaccn.readthedocs.io/en/latest/index.html"},"Autofac")," to register, locate, and inject components, services and other classes. See ",(0,o.kt)("a",{parentName:"p",href:"/docs/mobile/sdk-dependency-injection"},"dependency injection")," for more info.")))}m.isMDXComponent=!0}}]);